# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
---

# --- General Egeria configuration ---
egeria:
  user: admin
  cohort: pts
  serverName: pts
  # Adds a delay between the PTS server being started, and starting the TUT server
  delay: 10

# --- PTS configuration ---
# These control the volumetrics of the PTS
volumeParameters:
  instancesPerType: 5   # number of instances to create for each type supported by the repository
  maxSearchResults: 2   # maximum number of search results to retrieve per page of results
  waitBetweenScenarios: 0   # how long to wait between test cases, i.e. for asynchronous or eventually-consistent repositories
  profilesToSkip:   # list of overall profiles to skip testing (i.e. to reduce runtime / focus areas of PTS)
  methodsToSkip:    # list of individual metadata collection methods to skip testing (i.e. to reduce runtime / focus areas of PTS)

# Details of the technology under test ("tut") for the PTS
tut:
  serverName: tut
  # serverType defines the type of the technology under test:
  # - native = a built-in repository of Egeria core (e.g. in-memory repository)
  # - plugin = a pluggable native repository for Egeria (e.g. XTDB)
  # - proxy  = a proxy'd third party repository technology (e.g. Apache Atlas)
  serverType: "native"
  connectorProvider: "org.odpi.openmetadata.adapters.repositoryservices.graphrepository.repositoryconnector.GraphOMRSRepositoryConnectorProvider"
  # connectorConfig is to provide any additional configuration to the connector, via 'configurationProperties'
  connectorConfig:
  # serverEndpoint is only needed for the 'proxy' type, where the third party technology is running remotely
  serverEndpoint:
    host:
    port:
    protocol:
    username:
    password:

# Provide a list of URLs to all files (i.e. jars) that should be downloaded for connectivity, where
# each item in the list is a dict pair of 'filename' and 'url', e.g.
# - filename: my-connector-file.jar
#   url: https://some-location/com?even=with&some-parameters=embedded&for-dynamic-download=true
downloads:

# --- Additional environment variables - inserted directly into configmap. Can use helm template directives
#extraEnv: |
#  VAR1: value1
#  VAR2: value2

# Specific processing features
options:
  jobs:
    config:
      # Timeout for configuration job
      backOffLimit: 60
      # Default will be true, but during dev set to false
      # This setting will control if the k8s job (and hence pod/logs) are deleted after egeria configuration
      # Set to false to assist in debugging
      jobdelete: true

# --- Resource limits ---
resources:
  requests:
    memory: "4Gi"
    cpu: "1000m"
  limits:
    memory: "8Gi"
    cpu: "2000m"

# --- Docker image sources ---
# Defaults for the images (can be overridden here or individually, see comment below)
imageDefaults:
  registry: quay.io
  namespace: odpi
  tag: "3.14"
  pullPolicy: IfNotPresent

# Normally we install the strimzi operator as part of the Chart. However this requires admin permissions, and
# will create cluster-scoped resources. Set to false to skip this when in a restricted environment, or needing multiple
# installs of egeria charts in the same cluster. Requires the strimzi operator to be
# installed on the cluster by an admin, or a prior install
strimzi:
  enabled: true

