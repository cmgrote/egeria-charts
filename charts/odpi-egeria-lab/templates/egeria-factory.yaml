# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: factory
  name: {{ .Release.Name }}-factory

spec:
  type: {{ .Values.service.type }}
  ports:
    - name: https
      port: 9443
      targetPort: 9443
      {{- if ( eq  .Values.service.type "NodePort" ) }}
      nodePort: {{ .Values.service.nodeport.factory }}
      {{- end }}
    {{ if .Values.debug.egeriaJVM }}
    - name: debug
      port: 5005
      targetPort: 5005
      {{- if ( eq  .Values.service.type "NodePort" ) }}
      nodePort: {{ .Values.service.nodeport.debug.factory }}
      {{- end }}
  {{ end }}
  selector:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: factory
...
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "myapp.fullname" . }}-factory
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: factory

spec:
  replicas: 1
  serviceName: {{ .Release.Name }}-factory
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "myapp.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: factory
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "myapp.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: factory
    spec:
    {{- include "egeria.security" . | nindent 6 }}
      volumes:
        - name: egeria-connector-volume
          emptyDir: {}
{{ if .Values.extralibs }}
      initContainers:
        - name: init-connector
          image: "{{ if (.Values.image.configure.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.configure.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.configure.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.configure.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.configure.name }}\
                  :{{ .Values.image.configure.tag | default .Values.imageDefaults.tag }}"
          imagePullPolicy: {{ .Values.image.configure.pullPolicy | default .Values.imageDefaults.pullPolicy }}
          command:
            - "/bin/bash"
            - "-c"
            - >
                cd /deployments/server/extralib &&
{{ range .Values.extralibs }}
                curl --location {{ .url | quote }} --output {{ .filename | quote }} &&
{{ end }}
                echo "Downloads complete."
          volumeMounts:
            - mountPath: /deployments/server/extralib
              name: egeria-connector-volume
{{ end }}
      containers:
        - name: egeria
          image: "{{ if (.Values.image.egeria.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.egeria.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.egeria.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.egeria.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.egeria.name }}\
                  :{{ .Values.image.egeria.tag | default .Values.egeria.version }}"
          imagePullPolicy: {{ (.Values.image.egeria.pullPolicy | default .Values.imageDefaults.pullPolicy) | default (ternary "Always" "IfNotPresent" ( hasSuffix "SNAPSHOT" (.Values.image.egeria.tag | default .Values.egeria.version )))  }}
          envFrom:
            - configMapRef:
                name: {{ include "myapp.fullname" . }}-configmap
          env:
            {{ if .Values.debug.egeriaJVM }}
            - name: JAVA_DEBUG
              value:  "true"
            {{ end }}
            - name: "LOADER_PATH"
              value: "/deployments/server/extralib,/deployments/server/lib"
          ports:
            - containerPort: 9443
            {{ if .Values.debug.egeriaJVM }}
            - containerPort: 5005
            {{ end }}
          readinessProbe:
            tcpSocket:
              port: 9443
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 6
          resources: {}
          volumeMounts:
          {{ if .Values.persistence.enabled }}
            - mountPath: "/deployments/data"
              name: {{ .Release.Name }}-factory-data
          {{ end }}
            - mountPath: /deployments/server/extralib
              name: egeria-connector-volume
              readOnly: true
      restartPolicy: Always
  {{ if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-factory-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
      #storageClassName:
  {{ end }}
...
