# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: uistatic-nginx-conf
  name: {{ .Release.Name }}-uistatic-nginx-conf
data:
  nginx.conf: |
    # SPDX-License-Identifier: Apache-2.0
    # Copyright Contributors to the Egeria project.
    worker_processes  auto;
    error_log  /var/log/nginx/error.log notice;
    events {
      worker_connections  1024;
    }
    pid        /tmp/nginx.pid;
    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;
      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
      access_log  /var/log/nginx/access.log  main;
      sendfile        on;
      keepalive_timeout  65;
      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp_path;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;
      include /etc/nginx/conf.d/*.conf;
    }
...
---
{{ if .Values.egeria.egeriaui }}
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: uistatic
  name: {{ .Release.Name }}-uistatic

spec:
  type: {{ .Values.service.type }}
  ports:
    - port: 8080
      targetPort: 8080
      {{- if ( eq  .Values.service.type "NodePort" ) }}
      nodePort: {{ .Values.service.nodeport.uistatic }}
      {{- end }}
  selector:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: uistatic
...
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "myapp.fullname" . }}-uistatic
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: uistatic

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "myapp.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: uistatic
  strategy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "myapp.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: uistatic
    spec:
      containers:
        - name: presentation
          image: "{{ if (.Values.image.uistatic.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.uistatic.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.uistatic.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.uistatic.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.uistatic.name }}\
                  :{{ .Values.image.uistatic.tag | default .Values.egeria.version }}"
          imagePullPolicy: {{ .Values.image.uistatic.pullPolicy | default .Values.imageDefaults.pullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: 8080
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 6
          resources: {}
          #env:
          #  - name: EGERIA_PRESENTATIONSERVER_SERVER_coco
          #    value: "{\"remoteServerName\":\"cocoView1\",\"remoteURL\":\"https://{{ .Release.Name }}-datalake:9443\"}"
          volumeMounts:
            - name: template-vol
              mountPath: /etc/nginx/templates
            - name: conf-vol
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: confd-vol
              mountPath: /etc/nginx/conf.d
      restartPolicy: Always
      volumes:
        - name: template-vol
          configMap:
            name: {{ .Release.Name }}-uistatic-template-configmap
        # default config file - read only (configmap)
        - name: conf-vol
          configMap:
            name: {{ .Release.Name }}-uistatic-nginx-conf
        # Created each time, so an empty local directory is suitable. Must be writeable
        - name: confd-vol
          emptyDir: { }

---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: etc
  name: {{ .Release.Name }}-uistatic-template-configmap
{{- if and (.Files.Glob "etc/staticui.conf.template") }}
binaryData:
  {{- $root := . }}
  {{- range $path, $bytes := .Files.Glob "etc/staticui.conf.template" }}
  {{ base $path }}: {{ $root.Files.Get $path | b64enc | quote }}
  {{- end }}
  {{- end }}

...
{{ end }}
